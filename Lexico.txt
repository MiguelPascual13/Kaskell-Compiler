package kaskell;

%%
%line
%class AnalizadorKasklex
%type UnidadLexica
%unicode

%{
	private  KOperations kops;
	public String lexema() {return yytext();}
	public int fila() {return yyLine+1;}
%}

%eofval{
	return kops.unidadEof()
%eofval}

%init{
	kops = new KOperations(this); 
%init}

letra = ([A-Z]|[a-z])
digito = [0-9]
entero = {digito}+
separador = [ \t\r\b\n]
comentario = {$.}({letra}|{digito}|{separador}|{.}{^$}|{$})*{.$}
suma = \+
menos = \-
prod = \*
div = /
izqPar = \(
derPar = \)
asig = \=
cartProd = X
coma = \,
mayor = \>
menor = \<
izqCor = \[
derCor = \]
izqLlav = \{
derLlav = \}
igualdad = \=\=
desigualdad = \=\\\=
puntoComa = \;
gorrito = \^
flecha = \|\-\>
mod = mod
or = or
and = and
not = not
int = kinkeger
bool = kool
struct = struK
punt = K\-
tipoSin = KK
if = if
else = else
while = while
for = for
dosPuntos = \:
%%
